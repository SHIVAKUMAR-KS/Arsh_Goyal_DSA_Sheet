class Solution {
    public boolean isValid(String s) {

        Stack<Character> st=new Stack<>();
        for(char ch: s.toCharArray()){
            if(ch== '(' || ch=='{' || ch=='['){
                st.push(ch);
            }else{
                if(st.isEmpty()){
                    return false;
                }
                char top=st.pop();

                if((ch==')' && top!='(') || (ch=='}' && top!='{') || (ch==']' && top!='[')){
                    return false;
                }
            }
        }
        return st.isEmpty();
        
    }
}

----------------------------Explanation----------------------------
Example 1:

Input: s = "()"

Output: true

Example 2:

Input: s = "()[]{}"

Output: true


1.In this question must compulsory if any parentheses is open that should ne closed
if it is then return true othewise return false


2.way to solve:
--create a stack ,used bacuase stack have LIFO property
so ,we can easily detect the closed parentheses for opened parenthesis
--
